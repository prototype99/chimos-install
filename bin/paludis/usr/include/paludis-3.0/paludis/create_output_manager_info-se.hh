/* vim: set ro : */

/* ******************************************************** */
/* THIS IS A GENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY */
/* ******************************************************** */

        /**
         * Options telling most CreateOutputManagerInfo subclasses whether we
         * will be run exclusively or with other tasks.
         *
         * \see CreateOutputManagerInfo
         */
enum OutputExclusivity
{
    oe_background,  ///< Run in the background, produce no output
    oe_with_others,  ///< Other things may be running at the same time
    oe_exclusive,  ///< We are the only thing running
    last_oe ///< Number of keys in paludis::OutputExclusivity
};

/**
 * Write a OutputExclusivity to a stream.
 */
std::ostream &
operator<< (std::ostream &, const OutputExclusivity &) PALUDIS_VISIBLE;

/**
 * Read a OutputExclusivity from a stream.
 */
std::istream &
operator>> (std::istream &, OutputExclusivity &) PALUDIS_VISIBLE;

        /**
         * Options telling most CreateOutputManagerInfo subclasses what features our
         * client supports, allowing environments to decide how to handle output
         * managers.
         *
         * \see CreateOutputManagerInfo
         * \see ClientOutputFeatures
         */
enum ClientOutputFeature
{
    cof_summary_at_end,  ///< Set if the client shows a summary at the end
    last_cof ///< Number of keys in paludis::ClientOutputFeature
};

/**
 * Write a ClientOutputFeature to a stream.
 */
std::ostream &
operator<< (std::ostream &, const ClientOutputFeature &) PALUDIS_VISIBLE;

/**
 * Read a ClientOutputFeature from a stream.
 */
std::istream &
operator>> (std::istream &, ClientOutputFeature &) PALUDIS_VISIBLE;

