/* vim: set ro : */

/* ******************************************************** */
/* THIS IS A GENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY */
/* ******************************************************** */

        /**
         * Role for a DepSpecAnnotation.
         *
         * \ingroup g_dep_spec
         * \since 0.58
         */
enum DepSpecAnnotationRole
{
    dsar_none,  ///< No particular role
    dsar_general_description,  ///< A description
    dsar_general_url,  ///< A url
    dsar_general_note,  ///< A note
    dsar_general_lang,  ///< A language
    dsar_general_date,  ///< A date
    dsar_general_author,  ///< An author
    dsar_general_token,  ///< A token
    dsar_general_defined_in,  ///< Defined in
    dsar_no_self_match,  ///< Spec doesn't match the containing package (checked by match_package)
    dsar_blocker_manual,  ///< Blocker, resolve manually
    dsar_blocker_uninstall_blocked_after,  ///< Blocker, uninstall blocked after
    dsar_blocker_uninstall_blocked_before,  ///< Blocker, uninstall blocked before
    dsar_blocker_upgrade_blocked_before,  ///< Blocker, upgrade blocked before
    dsar_blocker_weak,  ///< Blocker, weak (generally implicit)
    dsar_blocker_strong,  ///< Blocker, strong (generally implicit)
    dsar_myoptions_requires,  ///< MYOPTIONS, requires
    dsar_myoptions_n_at_least_one,  ///< MYOPTIONS, at least one
    dsar_myoptions_n_at_most_one,  ///< MYOPTIONS, at most one
    dsar_myoptions_n_exactly_one,  ///< MYOPTIONS, exactly one
    dsar_myoptions_presumed,  ///< MYOPTIONS, presumed
    dsar_suggestions_group_name,  ///< Group name for suggestions
    dsar_system_implicit,  ///< For system, whether a spec is an implicit dependency
    dsar_licence_last_checked,  ///< Last checked, for licences
    last_dsar ///< Number of keys in paludis::DepSpecAnnotationRole
};

/**
 * Write a DepSpecAnnotationRole to a stream.
 */
std::ostream &
operator<< (std::ostream &, const DepSpecAnnotationRole &) PALUDIS_VISIBLE;

/**
 * Read a DepSpecAnnotationRole from a stream.
 */
std::istream &
operator>> (std::istream &, DepSpecAnnotationRole &) PALUDIS_VISIBLE;

        /**
         * What kind of annotation a DepSpecAnnotation is.
         *
         * Note that dsas_expandable annotations should generally be ignored
         * for logic purposes, and that dsas_expanded should generally be
         * ignored for display purposes.
         *
         * \ingroup g_dep_spec
         * \since 0.59
         */
enum DepSpecAnnotationKind
{
    dsak_literal,  ///< Specified literally
    dsak_synthetic,  ///< Synthetic (e.g. for 0ish blockers)
    dsak_expanded,  ///< Expanded from a *key
    dsak_expandable,  ///< This is a *key
    last_dsak ///< Number of keys in paludis::DepSpecAnnotationKind
};

/**
 * Write a DepSpecAnnotationKind to a stream.
 */
std::ostream &
operator<< (std::ostream &, const DepSpecAnnotationKind &) PALUDIS_VISIBLE;

/**
 * Read a DepSpecAnnotationKind from a stream.
 */
std::istream &
operator>> (std::istream &, DepSpecAnnotationKind &) PALUDIS_VISIBLE;

