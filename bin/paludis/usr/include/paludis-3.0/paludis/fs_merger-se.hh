/* vim: set ro : */

/* ******************************************************** */
/* THIS IS A GENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY */
/* ******************************************************** */

        /**
         * Status flags for FSMerger, used by FSMergerStatusFlags
         *
         * \ingroup g_repository
         * \since 0.26
         * \since 0.51 called FSMergerStatusFlag instead of MergeStatusFlag
         */
enum FSMergerStatusFlag
{
    msi_unlinked_first,  ///< We unlinked before the merge
    msi_rename,  ///< We renamed rather than copied
    msi_parent_rename,  ///< A parent directory was renamed, so we weren't copied
    msi_used_existing,  ///< We used the existing entry (e.g. dir over dir)
    msi_fixed_ownership,  ///< We fixed owner or group from the reduced id
    msi_setid_bits,  ///< The source file had set*id bits
    msi_xattr,  ///< The source file had xattr bits
    msi_as_hardlink,  ///< We detected a hardlink and merged it as such
    msi_unselected_part,  ///< The content belongs to an unselected part
    last_msi ///< Number of keys in paludis::FSMergerStatusFlag
};

/**
 * Write a FSMergerStatusFlag to a stream.
 */
std::ostream &
operator<< (std::ostream &, const FSMergerStatusFlag &) PALUDIS_VISIBLE;

enum FSMergerOption
{
    fsmo_dir_over_sym_dir_is_error,  ///< Merging a directory over a symlink is an error
    last_fsmo ///< Number of keys in paludis::FSMergerOption
};

/**
 * Write a FSMergerOption to a stream.
 */
std::ostream &
operator<< (std::ostream &, const FSMergerOption &) PALUDIS_VISIBLE;

/**
 * Read a FSMergerOption from a stream.
 */
std::istream &
operator>> (std::istream &, FSMergerOption &) PALUDIS_VISIBLE;

